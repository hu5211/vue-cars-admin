{"remainingRequest":"D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue-cars\\vue-cars-admin\\src\\components\\dialog\\addCarsBrand.vue?vue&type=style&index=0&id=7c4de88e&lang=scss&scoped=true&","dependencies":[{"path":"D:\\vue-cars\\vue-cars-admin\\src\\components\\dialog\\addCarsBrand.vue","mtime":1598922766659},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWwtaW5wdXQgew0KICB3aWR0aDogNDAlOw0KfQ0K"},{"version":3,"sources":["addCarsBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA","file":"addCarsBrand.vue","sourceRoot":"src/components/dialog","sourcesContent":["<template>\r\n  <div class=\"cars-dialog-center\">\r\n    <!-- 弹窗 -->\r\n    <el-dialog\r\n      title=\"新增车辆品牌\"\r\n      :visible.sync=\"dialogVisible\"\r\n      :close-on-click-modal=\"false\"\r\n      @close=\"close\"\r\n      @opened=\"opened\"\r\n    >\r\n      <FormData :formData=\"form_data\" :formItem=\"form_item\" :formHandler=\"form_handler\">\r\n        <template v-slot:logo>\r\n          <div class=\"upload-img-wrap\">\r\n            <div class=\"upload-img\">\r\n              <img v-show=\"logo_current\" :src=\"logo_current\" />\r\n            </div>\r\n            <div class=\"img-list\" prop=\"logo\">\r\n              <li v-for=\"item in logo\" :key=\"item.id\" @click=\"logo_current=item.img\">\r\n                <img :src=\"item.img\" alt=\"item.name\" />\r\n              </li>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </FormData>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\n// api\r\nimport { BrandLogo, BrandAdd, BrandDetailed, BrandEdit } from \"@/api/brand\";\r\n// 组件\r\nimport FormData from \"@c/formData\";\r\nexport default {\r\n  name: \"\",\r\n  components: { FormData },\r\n  props: {\r\n    flagVisible: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    data: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 弹窗显示关闭标记\r\n      dialogVisible: false,\r\n      //表单数据\r\n      form_data: {\r\n        nameCh: \"\",\r\n        nameEn: \"\",\r\n        imgUrl: \"\",\r\n        status: \"\",\r\n        content: \"\"\r\n      },\r\n      //表单配置\r\n      form_item: [\r\n        {\r\n          type: \"Input\",\r\n          label: \"品牌中文\",\r\n          prop: \"nameCh\",\r\n          width: \"300px\",\r\n          required: true\r\n        },\r\n        {\r\n          type: \"Input\",\r\n          label: \"品牌英文\",\r\n          prop: \"nameEn\",\r\n          width: \"300px\"\r\n        },\r\n        {\r\n          type: \"Slot\",\r\n          slotName: \"logo\",\r\n          label: \"Logo\",\r\n          prop: \"imgUrl\"\r\n        },\r\n        {\r\n          type: \"Radio\",\r\n          label: \"禁启用\",\r\n          prop: \"status\",\r\n          options: this.$store.state.config.radio_status,\r\n          required: true\r\n        }\r\n      ],\r\n      // 表单按钮\r\n      form_handler: [\r\n        {\r\n          label: \"确定\",\r\n          key: \"submit\",\r\n          type: \"danger\",\r\n          handler: () => this.submit()\r\n        }\r\n      ],\r\n      //logo\r\n      logo: [],\r\n      //选中的logo\r\n      logo_current: \"\"\r\n      //验证表单规则\r\n      // rules: {\r\n      //   nameCh: [\r\n      //     { required: true, message: \"请输入中文品牌\", trigger: \"blur\" }\r\n      //   ],\r\n      //   nameEn: [\r\n      //     { required: true, message: \"请输入英文品牌\", trigger: \"blur\" }\r\n      //   ],\r\n      //   status: [\r\n      //     {\r\n      //       required: true,\r\n      //       message: \"请至少选择一个\",\r\n      //       trigger: \"change\"\r\n      //     }\r\n      //   ]\r\n      // }\r\n    };\r\n  },\r\n  methods: {\r\n    opened() {\r\n      this.getBrandLogo();\r\n      this.getDetailed();\r\n    },\r\n    //获取logo\r\n    getBrandLogo() {\r\n      //存在数据时不再请求接口\r\n      if (this.logo.length !== 0) {\r\n        return false;\r\n      }\r\n      BrandLogo().then(response => {\r\n        const data = response.data;\r\n        if (data) {\r\n          this.logo = data;\r\n        }\r\n      });\r\n    },\r\n    //获取详情\r\n    getDetailed() {\r\n      this.form_data = this.data;\r\n      this.logo_current = this.data.imgUrl;\r\n      this.form_data.imgUrl = this.data.imgUrl;\r\n    },\r\n    //提交\r\n    submit(formName) {\r\n      // this.$refs[formName].validate(valid => {\r\n      //   if (valid) {\r\n      this.data.id ? this.edit() : this.add();\r\n      // } else {\r\n      //   return false;\r\n      // }\r\n      // });\r\n    },\r\n    //添加\r\n    add() {\r\n      this.form_data.imgUrl = this.logo_current;\r\n      BrandAdd(this.form_data).then(response => {\r\n        this.$message({\r\n          type: \"success\",\r\n          message: response.message\r\n        });\r\n        this.close();\r\n        this.$emit(\"callbackComponent\", {\r\n          function: \"search\"\r\n        });\r\n      });\r\n    },\r\n    //编辑\r\n    edit() {\r\n      this.form_data.imgUrl = this.logo_current;\r\n      const requestData = JSON.parse(JSON.stringify(this.form_data));\r\n      requestData.id = this.data.id;\r\n      BrandEdit(requestData).then(response => {\r\n        this.$message({\r\n          type: \"success\",\r\n          message: response.message\r\n        });\r\n        this.close();\r\n        this.$emit(\"callbackComponent\", {\r\n          function: \"search\"\r\n        });\r\n      });\r\n    },\r\n    //重置表单\r\n    reset(formName) {\r\n      for (let key in this.form_data) {\r\n        this.form_data[key] = \"\";\r\n      }\r\n      // this.$refs[formName].resetFields();\r\n      this.logo_current = \"\";\r\n    },\r\n    close() {\r\n      this.reset();\r\n      // 反向修改\r\n      this.$emit(\"update:flagVisible\", false);\r\n    }\r\n  },\r\n  watch: {\r\n    flagVisible: {\r\n      handler(newValue, oldValue) {\r\n        this.dialogVisible = newValue;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.el-input {\r\n  width: 40%;\r\n}\r\n</style>"]}]}
{"remainingRequest":"D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue-cars\\vue-cars-admin\\src\\views\\Login\\index.vue?vue&type=style&index=0&id=aeba673c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\vue-cars\\vue-cars-admin\\src\\views\\Login\\index.vue","mtime":1598519745329},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNsb2dpbiB7DQogIGhlaWdodDogMTAwdmg7DQogIGJhY2tncm91bmQtY29sb3I6ICMzNDRhNWY7DQp9DQouZm9ybS13cmFwIHsNCiAgd2lkdGg6IDMwMHB4Ow0KICBwYWRkaW5nLXRvcDogMTAwcHg7DQogIG1hcmdpbjogYXV0bzsNCn0NCi5tZW51LXRhYiB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgbGkgew0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICBwYWRkaW5nOiAxMHB4IDI0cHg7DQogICAgbWFyZ2luOiAwIDEwcHg7DQogICAgY29sb3I6ICNmZmY7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgJi5jdXJyZW50IHsNCiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTsNCiAgICB9DQogIH0NCn0NCi5mb3JtLWxhYmVsIHsNCiAgZGlzcGxheTogYmxvY2s7DQogIGNvbG9yOiAjZmZmOw0KICBmb250LXNpemU6IDE0cHg7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Login","sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <div class=\"form-wrap\">\r\n      <ul class=\"menu-tab\">\r\n        <li\r\n          @click=\"toggleHigh(item.type)\"\r\n          :class=\"{'current': current_menu === item.type}\"\r\n          v-for=\"item in menu_switch_item\"\r\n          :key=\"item.type\"\r\n        >{{ item.label }}</li>\r\n      </ul>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"form_rules\">\r\n        <el-form-item prop=\"name\">\r\n          <label class=\"form-label\">用户名</label>\r\n          <el-input v-model=\"form.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <label class=\"form-label\">密码</label>\r\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"passwords\" v-show=\"current_menu === 'register'\">\r\n          <label class=\"form-label\">确认密码</label>\r\n          <el-input type=\"password\" v-model=\"form.passwords\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"code\">\r\n          <label class=\"form-label\">验证码</label>\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"14\">\r\n              <el-input v-model=\"form.code\"></el-input>\r\n            </el-col>\r\n            <el-col :span=\"10\">\r\n              <el-button\r\n                type=\"success\"\r\n                class=\"el-button-block btnyz\"\r\n                @click=\"getCodeFn()\"\r\n                :disabled=\"code_disabled\"\r\n                :loading=\"code_loading\"\r\n              >{{ code_text }}</el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"danger\"\r\n            class=\"el-button-block login-from\"\r\n            :disabled=\"submit_disabled\"\r\n            @click=\"submitForm('form')\"\r\n          >{{ current_menu === \"login\" ? \"登录\": \"注册\"}}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport sha1 from \"js-sha1\";\r\nimport { reactive, ref, set } from \"@vue/composition-api\";\r\nimport { validate_email, validate_password } from \"@/utils/validate\";\r\nimport { GetCode, Register, Login } from \"@/api/login\";\r\nimport { mapStat } from \"vuex\";\r\nexport default {\r\n  name: \"Login\",\r\n  setup(props, { root, refs }) {\r\n    const menu_switch_item = reactive([\r\n      { type: \"login\", label: \"登录\" },\r\n      { type: \"register\", label: \"注册\" }\r\n    ]);\r\n    let current_menu = ref(menu_switch_item[0].type);\r\n    const form = reactive({\r\n      name: \"\",\r\n      password: \"\",\r\n      passwords: \"\",\r\n      code: \"\"\r\n    });\r\n    let code_text = ref(\"获取验证码\");\r\n    let code_loading = ref(false);\r\n    let code_disabled = ref(false);\r\n    let timer = ref(null);\r\n    let submit_disabled = ref(true);\r\n    /**\r\n     * 自定义检验规则\r\n     */\r\n    // 检验邮箱\r\n    const validate_name_rules = (rule, value, callback) => {\r\n      let regEmail = validate_email(value);\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入邮箱\"));\r\n      } else if (!regEmail) {\r\n        callback(new Error(\"邮箱格式不正确\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 检验密码\r\n    const validate_password_rules = (rule, value, callback) => {\r\n      let regPassword = validate_password(value);\r\n      let passwords_value = form.passwords;\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else if (!regPassword) {\r\n        callback(new Error(\"请入 >=6 并且 <= 20 位的密码，包含数字、字母\"));\r\n      } else if (passwords_value && passwords_value !== value) {\r\n        callback(new Error(\"两次密码不一致，请重新输入\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 检验确认密码\r\n    const validate_passwords_rules = (rule, value, callback) => {\r\n      let password_value = form.password;\r\n      if (current_menu.value === \"login\") {\r\n        callback();\r\n        return false;\r\n      }\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入确认密码\"));\r\n      } else if (password_value !== value) {\r\n        callback(new Error(\"两次密码不一致，请重新输入\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 检验验证码\r\n    const validate_code_rules = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入验证码\"));\r\n      } else if (value.length !== 6) {\r\n        callback(new Error(\"请输入长度为6位数的验证码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 检验规则\r\n    const form_rules = reactive({\r\n      name: [{ validator: validate_name_rules, trigger: \"blur\" }],\r\n      password: [{ validator: validate_password_rules, trigger: \"blur\" }],\r\n      passwords: [{ validator: validate_passwords_rules, trigger: \"blur\" }],\r\n      code: [{ validator: validate_code_rules, trigger: \"blur\" }]\r\n    });\r\n    // 切换样式方法\r\n    const toggleHigh = type => {\r\n      current_menu.value = type;\r\n    };\r\n    // 倒计时\r\n    const countdown = number => {\r\n      let second = number;\r\n      // 禁用按钮\r\n      code_disabled.value = true;\r\n      // 按钮文本\r\n      code_text.value = `倒计进${second}秒`;\r\n      timer = setInterval(() => {\r\n        second--;\r\n        code_text.value = `倒计进${second}秒`;\r\n        if (second < 0) {\r\n          code_text.value = `重新获取`;\r\n          // 启用按钮\r\n          code_disabled.value = false;\r\n          clearInterval(timer);\r\n        }\r\n      }, 1000);\r\n    };\r\n    // 获取验证码方法\r\n    const getCodeFn = () => {\r\n      if (form.name === \"\") {\r\n        root.$message.error(\"邮箱不能为空！！\");\r\n        return false;\r\n      }\r\n      if (!validate_email(form.name)) {\r\n        root.$message({\r\n          message: \"邮箱格式有误，请重新输入！！\",\r\n          type: \"error\"\r\n        });\r\n        return false;\r\n      }\r\n      let requestData = {\r\n        username: form.name,\r\n        module: current_menu.value\r\n      };\r\n      code_text.value = \"发送中\";\r\n      code_loading.value = true;\r\n      GetCode(requestData)\r\n        .then(response => {\r\n          console.log(response); // 这里打印拦截器返回的信息，response是自定义参数。\r\n          root.$message({\r\n            message: response.message,\r\n            type: \"success\"\r\n          });\r\n          // 激活按钮\r\n          submit_disabled.value = false;\r\n          // 清除加载\r\n          code_loading.value = false;\r\n          // 执行倒计时方法\r\n          countdown(60);\r\n        })\r\n        .catch(error => {\r\n          code_text.value = \"重新获取\";\r\n          code_loading.value = false;\r\n        });\r\n    };\r\n    // 提交表单\r\n    const submitForm = formName => {\r\n      refs[formName].validate(valid => {\r\n        // 表单验证通过\r\n        if (valid) {\r\n          // 三元运算\r\n          current_menu.value === \"login\" ? login() : register();\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n    // 登录\r\n    const login = () => {\r\n      const requestData = {\r\n        username: form.name,\r\n        password: sha1(form.password),\r\n        code: form.code\r\n      };\r\n      root.$store\r\n        .dispatch(\"app/loginAction\", requestData)\r\n        .then(response => {\r\n          root.$message({\r\n            message: response.message,\r\n            type: \"success\"\r\n          });\r\n          // 页面跳转\r\n          root.$router.push({ name: \"ConsoleIndex\" });\r\n        })\r\n        .catch(error => {\r\n          // 重置数据\r\n          reset();\r\n        });\r\n    };\r\n    // 注册\r\n    const register = () => {\r\n      const requestData = {\r\n        username: form.name,\r\n        password: sha1(form.password),\r\n        code: form.code\r\n      };\r\n      Register(requestData)\r\n        .then(response => {\r\n          root.$message({\r\n            message: response.message,\r\n            type: \"success\"\r\n          });\r\n          // 重置数据\r\n          reset();\r\n        })\r\n        .catch(error => {\r\n          // 重置数据\r\n          reset();\r\n        });\r\n    };\r\n    // 重置\r\n    const reset = () => {\r\n      // 重置表单\r\n      refs[\"form\"].resetFields();\r\n      // 修改模块\r\n      current_menu.value = \"login\";\r\n      // 判断定时器是否存在，存在则清除\r\n      if (timer) {\r\n        clearInterval(timer);\r\n      }\r\n      // 还原获取验码按钮状态\r\n      code_disabled.value = false;\r\n      code_text.value = \"获取验证码\";\r\n    };\r\n    return {\r\n      form,\r\n      menu_switch_item,\r\n      current_menu,\r\n      form_rules,\r\n      code_text,\r\n      code_loading,\r\n      code_disabled,\r\n      submit_disabled,\r\n      toggleHigh,\r\n      getCodeFn,\r\n      submitForm,\r\n      login,\r\n      register\r\n    };\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#login {\r\n  height: 100vh;\r\n  background-color: #344a5f;\r\n}\r\n.form-wrap {\r\n  width: 300px;\r\n  padding-top: 100px;\r\n  margin: auto;\r\n}\r\n.menu-tab {\r\n  text-align: center;\r\n  li {\r\n    display: inline-block;\r\n    padding: 10px 24px;\r\n    margin: 0 10px;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    &.current {\r\n      background-color: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n}\r\n.form-label {\r\n  display: block;\r\n  color: #fff;\r\n  font-size: 14px;\r\n}\r\n</style>"]}]}
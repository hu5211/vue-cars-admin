{"remainingRequest":"D:\\vue-cars\\vue-cars-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\vue-cars\\vue-cars-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue-cars\\vue-cars-admin\\src\\components\\common\\cityArea\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue-cars\\vue-cars-admin\\src\\components\\common\\cityArea\\index.vue","mtime":1598700686779},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-cars\\vue-cars-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgR2V0Q2l0eSB9IGZyb20gIkAvYXBpL2NvbW1vbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2l0eUFyZWEiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiB7CiAgICAgIGFkZHJlc3M6IFtdLAogICAgICBhZGRyZXNzRGF0YToge30sCiAgICAgIHZhbHVlOiAiIiwKICAgICAgY2FzY2FkZXJfb3B0aW9uczogW10sCiAgICAgIGNhc2NhZGVyX3Byb3BzOiB7CiAgICAgICAgbGF6eTogdHJ1ZSwKICAgICAgICBsYXp5TG9hZDogZnVuY3Rpb24gbGF6eUxvYWQobm9kZSwgcmVzb2x2ZSkgewogICAgICAgICAgdmFyIGxldmVsID0gbm9kZS5sZXZlbDsgLy/or7fmsYLlj4LmlbAKCiAgICAgICAgICB2YXIgcmVxdWVzdERhdGEgPSB7fTsgLy/lo7DmmI7oh6rlrprkuYnphY3nva4KCiAgICAgICAgICB2YXIganNvblR5cGUgPSB7CiAgICAgICAgICAgIDA6IHsKICAgICAgICAgICAgICB0eXBlOiAicHJvdmluY2UiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIDE6IHsKICAgICAgICAgICAgICB0eXBlOiAiY2l0eSIsCiAgICAgICAgICAgICAgY29kZTogInByb3ZpbmNlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAyOiB7CiAgICAgICAgICAgICAgdHlwZTogImFyZWEiLAogICAgICAgICAgICAgIGNvZGU6ICJjaXR5IgogICAgICAgICAgICB9CiAgICAgICAgICB9OwoKICAgICAgICAgIGlmIChqc29uVHlwZVtsZXZlbF0uY29kZSkgewogICAgICAgICAgICByZXF1ZXN0RGF0YVsiIi5jb25jYXQoanNvblR5cGVbbGV2ZWxdLmNvZGUsICJfY29kZSIpXSA9IG5vZGUudmFsdWU7CiAgICAgICAgICB9CgogICAgICAgICAgcmVxdWVzdERhdGEudHlwZSA9IGpzb25UeXBlW2xldmVsXS50eXBlOwogICAgICAgICAgR2V0Q2l0eShyZXF1ZXN0RGF0YSkudGhlbihmdW5jdGlvbiAocmVzb25zZSkgewogICAgICAgICAgICB2YXIgZGF0YSA9IHJlc29uc2UuZGF0YS5kYXRhOwogICAgICAgICAgICB2YXIgdHlwZSA9IGpzb25UeXBlW2xldmVsXS50eXBlLnRvVXBwZXJDYXNlKCk7IC8v6Ieq5a6a5LmJIHZhbHVlIGxhYmVsCgogICAgICAgICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICBpdGVtLnZhbHVlID0gaXRlbVsiIi5jb25jYXQodHlwZSwgIl9DT0RFIildOwogICAgICAgICAgICAgIGl0ZW0ubGFiZWwgPSBpdGVtWyIiLmNvbmNhdCh0eXBlLCAiX05BTUUiKV07CgogICAgICAgICAgICAgIGlmIChsZXZlbCA9PT0gMikgewogICAgICAgICAgICAgICAgaXRlbS5sZWFmID0gbGV2ZWwgPj0gMjsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOyAvL+WtmOWCqOecgeW4guaVsOaNrgoKICAgICAgICAgICAgX3RoaXMuYWRkcmVzc0RhdGFbanNvblR5cGVbbGV2ZWxdLnR5cGVdID0gZGF0YTsgLy/ov5Tlm57oioLngrnmlbDmja4KCiAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7CiAgICAgICAgICB9KTsgLy8g6I635Y+WYWRkcmVzcwoKICAgICAgICAgIGlmIChub2RlLmxldmVsICE9PSAwKSB7CiAgICAgICAgICAgIF90aGlzLmdldEFkZHJlc3Mobm9kZSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBpbml0VmFsdWU6ICLor7fpgInmi6nnnIHluILljLoiLAogICAgICBpbml0VmFsdWVGbGFnOiB0cnVlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy/liJ3lp4vljJbpu5jorqTlgLwKICAgIGluaXREZWZhdWx0OiBmdW5jdGlvbiBpbml0RGVmYXVsdCh2YWx1ZSkgewogICAgICBpZiAodmFsdWUpIHsKICAgICAgICB0aGlzLmluaXRWYWx1ZUZsYWcgPSB0cnVlOwogICAgICAgIHRoaXMuaW5pdFZhbHVlID0gdmFsdWUuc3BsaXQoIiwiKS5qb2luKCIgLyAiKTsKICAgICAgfQogICAgfSwKICAgIGNoYW5nZVZhbHVlOiBmdW5jdGlvbiBjaGFuZ2VWYWx1ZSh2YWx1ZSkgewogICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6Y2l0eUFyZWFWYWx1ZSIsIHZhbHVlLmpvaW4oKSk7IC8v5Yy56YWN5pyA5ZCO5LiA6aG5CgogICAgICB2YXIgbGFzdENvZGUgPSB2YWx1ZVt2YWx1ZS5sZW5ndGggLSAxXTsKICAgICAgdmFyIGFyZWEgPSB0aGlzLmFkZHJlc3NEYXRhLmFyZWEuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWUgPT0gbGFzdENvZGU7CiAgICAgIH0pWzBdOwogICAgICB0aGlzLmFkZHJlc3NbMl0gPSBhcmVhLmxhYmVsOwogICAgICB0aGlzLmdldEFkZHJlc3MoKTsKICAgIH0sCiAgICAvLyDojrflj5bkuK3mloflnLDlnYAKICAgIGdldEFkZHJlc3M6IGZ1bmN0aW9uIGdldEFkZHJlc3Mobm9kZSkgewogICAgICBpZiAobm9kZSkgewogICAgICAgIHZhciBpbmRleCA9IG5vZGUubGV2ZWwgLSAxOwogICAgICAgIHRoaXMuYWRkcmVzc1tpbmRleF0gPSBub2RlLmxhYmVsOwogICAgICB9IC8v5Li6dHJ1ZeaXtu+8jOaJp+ihjOWcsOWbvuS6pOS6kgoKCiAgICAgIGlmICh0aGlzLm1hcExvY2F0aW9uKSB7CiAgICAgICAgdGhpcy4kZW1pdCgiY2FsbGJhY2siLCB7CiAgICAgICAgICBmdW5jdGlvbjogInNldE1hcENlbnRlciIsCiAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIGFkZHJlc3M6IHRoaXMuYWRkcmVzcy5qb2luKCIiKQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy/muIXpmaRjaXR5CiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIHRoaXMudmFsdWUgPSAiIjsKICAgIH0KICB9LAogIHByb3BzOiB7CiAgICBjaXR5QXJlYVZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIKICAgIH0sCiAgICBtYXBMb2NhdGlvbjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-cascader\r\n    :class=\"{'cascader-input' : initValueFlag}\"\r\n    :placeholder=\"initValue\"\r\n    v-model=\"value\"\r\n    :options=\"cascader_options\"\r\n    :props=\"cascader_props\"\r\n    @change=\"changeValue\"\r\n  ></el-cascader>\r\n</template>\r\n\r\n<script>\r\nimport { GetCity } from \"@/api/common\";\r\nexport default {\r\n  name: \"cityArea\",\r\n  data() {\r\n    const _this = this;\r\n    return {\r\n      address: [],\r\n      addressData: {},\r\n      value: \"\",\r\n      cascader_options: [],\r\n      cascader_props: {\r\n        lazy: true,\r\n        lazyLoad(node, resolve) {\r\n          const level = node.level;\r\n          //请求参数\r\n          const requestData = {};\r\n          //声明自定义配置\r\n          const jsonType = {\r\n            0: { type: \"province\" },\r\n            1: { type: \"city\", code: \"province\" },\r\n            2: { type: \"area\", code: \"city\" }\r\n          };\r\n          if (jsonType[level].code) {\r\n            requestData[`${jsonType[level].code}_code`] = node.value;\r\n          }\r\n          requestData.type = jsonType[level].type;\r\n\r\n          GetCity(requestData).then(resonse => {\r\n            const data = resonse.data.data;\r\n            const type = jsonType[level].type.toUpperCase();\r\n            //自定义 value label\r\n            data.forEach(item => {\r\n              item.value = item[`${type}_CODE`];\r\n              item.label = item[`${type}_NAME`];\r\n              if (level === 2) {\r\n                item.leaf = level >= 2;\r\n              }\r\n            });\r\n            //存储省市数据\r\n            _this.addressData[jsonType[level].type] = data;\r\n            //返回节点数据\r\n            resolve(data);\r\n          });\r\n          // 获取address\r\n          if (node.level !== 0) {\r\n            _this.getAddress(node);\r\n          }\r\n        }\r\n      },\r\n      initValue: \"请选择省市区\",\r\n      initValueFlag: true\r\n    };\r\n  },\r\n  methods: {\r\n    //初始化默认值\r\n    initDefault(value) {\r\n      if (value) {\r\n        this.initValueFlag = true;\r\n        this.initValue = value.split(\",\").join(\" / \");\r\n      }\r\n    },\r\n    changeValue(value) {\r\n      this.$emit(\"update:cityAreaValue\", value.join());\r\n      //匹配最后一项\r\n      const lastCode = value[value.length - 1];\r\n      const area = this.addressData.area.filter(\r\n        item => item.value == lastCode\r\n      )[0];\r\n      this.address[2] = area.label;\r\n      this.getAddress();\r\n    },\r\n    // 获取中文地址\r\n    getAddress(node) {\r\n      if (node) {\r\n        const index = node.level - 1;\r\n        this.address[index] = node.label;\r\n      }\r\n      //为true时，执行地图交互\r\n      if (this.mapLocation) {\r\n        this.$emit(\"callback\", {\r\n          function: \"setMapCenter\",\r\n          data: {\r\n            address: this.address.join(\"\")\r\n          }\r\n        });\r\n      }\r\n    },\r\n    //清除city\r\n    clear() {\r\n      this.value = \"\";\r\n    }\r\n  },\r\n  props: {\r\n    cityAreaValue: { type: String, default: \"\" },\r\n    mapLocation: { type: Boolean, default: false }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>"],"sourceRoot":"src/components/common/cityArea"}]}